#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Data_XDPM")]
	public partial class DvdRentDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietPhieuDatTruoc(ChiTietPhieuDatTruoc instance);
    partial void UpdateChiTietPhieuDatTruoc(ChiTietPhieuDatTruoc instance);
    partial void DeleteChiTietPhieuDatTruoc(ChiTietPhieuDatTruoc instance);
    partial void InsertTitle(Title instance);
    partial void UpdateTitle(Title instance);
    partial void DeleteTitle(Title instance);
    partial void InsertChiTietPhieuMuon(ChiTietPhieuMuon instance);
    partial void UpdateChiTietPhieuMuon(ChiTietPhieuMuon instance);
    partial void DeleteChiTietPhieuMuon(ChiTietPhieuMuon instance);
    partial void InsertDVD(DVD instance);
    partial void UpdateDVD(DVD instance);
    partial void DeleteDVD(DVD instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhieuDatTruoc(PhieuDatTruoc instance);
    partial void UpdatePhieuDatTruoc(PhieuDatTruoc instance);
    partial void DeletePhieuDatTruoc(PhieuDatTruoc instance);
    partial void InsertPhieuMuon(PhieuMuon instance);
    partial void UpdatePhieuMuon(PhieuMuon instance);
    partial void DeletePhieuMuon(PhieuMuon instance);
    #endregion
		
		public DvdRentDbDataContext() : 
				base(global::DAL.Properties.Settings.Default.Data_XDPMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DvdRentDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DvdRentDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DvdRentDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DvdRentDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietPhieuDatTruoc> ChiTietPhieuDatTruocs
		{
			get
			{
				return this.GetTable<ChiTietPhieuDatTruoc>();
			}
		}
		
		public System.Data.Linq.Table<Title> Titles
		{
			get
			{
				return this.GetTable<Title>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this.GetTable<ChiTietPhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<DVD> DVDs
		{
			get
			{
				return this.GetTable<DVD>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhieuDatTruoc> PhieuDatTruocs
		{
			get
			{
				return this.GetTable<PhieuDatTruoc>();
			}
		}
		
		public System.Data.Linq.Table<PhieuMuon> PhieuMuons
		{
			get
			{
				return this.GetTable<PhieuMuon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuDatTruoc")]
	public partial class ChiTietPhieuDatTruoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPhieuDatTruoc;
		
		private int _IdTitle;
		
		private bool _TrangThai;
		
		private System.Nullable<bool> _Huy;
		
		private EntityRef<Title> _Title;
		
		private EntityRef<PhieuDatTruoc> _PhieuDatTruoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhieuDatTruocChanging(int value);
    partial void OnIdPhieuDatTruocChanged();
    partial void OnIdTitleChanging(int value);
    partial void OnIdTitleChanged();
    partial void OnTrangThaiChanging(bool value);
    partial void OnTrangThaiChanged();
    partial void OnHuyChanging(System.Nullable<bool> value);
    partial void OnHuyChanged();
    #endregion
		
		public ChiTietPhieuDatTruoc()
		{
			this._Title = default(EntityRef<Title>);
			this._PhieuDatTruoc = default(EntityRef<PhieuDatTruoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhieuDatTruoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPhieuDatTruoc
		{
			get
			{
				return this._IdPhieuDatTruoc;
			}
			set
			{
				if ((this._IdPhieuDatTruoc != value))
				{
					if (this._PhieuDatTruoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhieuDatTruocChanging(value);
					this.SendPropertyChanging();
					this._IdPhieuDatTruoc = value;
					this.SendPropertyChanged("IdPhieuDatTruoc");
					this.OnIdPhieuDatTruocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTitle", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTitle
		{
			get
			{
				return this._IdTitle;
			}
			set
			{
				if ((this._IdTitle != value))
				{
					if (this._Title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTitleChanging(value);
					this.SendPropertyChanging();
					this._IdTitle = value;
					this.SendPropertyChanged("IdTitle");
					this.OnIdTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit NOT NULL")]
		public bool TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Huy", DbType="Bit")]
		public System.Nullable<bool> Huy
		{
			get
			{
				return this._Huy;
			}
			set
			{
				if ((this._Huy != value))
				{
					this.OnHuyChanging(value);
					this.SendPropertyChanging();
					this._Huy = value;
					this.SendPropertyChanged("Huy");
					this.OnHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Title_ChiTietPhieuDatTruoc", Storage="_Title", ThisKey="IdTitle", OtherKey="Id", IsForeignKey=true)]
		public Title Title
		{
			get
			{
				return this._Title.Entity;
			}
			set
			{
				Title previousValue = this._Title.Entity;
				if (((previousValue != value) 
							|| (this._Title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Title.Entity = null;
						previousValue.ChiTietPhieuDatTruocs.Remove(this);
					}
					this._Title.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuDatTruocs.Add(this);
						this._IdTitle = value.Id;
					}
					else
					{
						this._IdTitle = default(int);
					}
					this.SendPropertyChanged("Title");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuDatTruoc_ChiTietPhieuDatTruoc", Storage="_PhieuDatTruoc", ThisKey="IdPhieuDatTruoc", OtherKey="Id", IsForeignKey=true)]
		public PhieuDatTruoc PhieuDatTruoc
		{
			get
			{
				return this._PhieuDatTruoc.Entity;
			}
			set
			{
				PhieuDatTruoc previousValue = this._PhieuDatTruoc.Entity;
				if (((previousValue != value) 
							|| (this._PhieuDatTruoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuDatTruoc.Entity = null;
						previousValue.ChiTietPhieuDatTruocs.Remove(this);
					}
					this._PhieuDatTruoc.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuDatTruocs.Add(this);
						this._IdPhieuDatTruoc = value.Id;
					}
					else
					{
						this._IdPhieuDatTruoc = default(int);
					}
					this.SendPropertyChanged("PhieuDatTruoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Title")]
	public partial class Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private System.Nullable<bool> _TheLoai;
		
		private System.Nullable<int> _Gia;
		
		private System.Nullable<int> _PhiTre;
		
		private System.Nullable<int> _ThoiGianThue;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietPhieuDatTruoc> _ChiTietPhieuDatTruocs;
		
		private EntitySet<DVD> _DVDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnTheLoaiChanging(System.Nullable<bool> value);
    partial void OnTheLoaiChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnPhiTreChanging(System.Nullable<int> value);
    partial void OnPhiTreChanged();
    partial void OnThoiGianThueChanging(System.Nullable<int> value);
    partial void OnThoiGianThueChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Title()
		{
			this._ChiTietPhieuDatTruocs = new EntitySet<ChiTietPhieuDatTruoc>(new Action<ChiTietPhieuDatTruoc>(this.attach_ChiTietPhieuDatTruocs), new Action<ChiTietPhieuDatTruoc>(this.detach_ChiTietPhieuDatTruocs));
			this._DVDs = new EntitySet<DVD>(new Action<DVD>(this.attach_DVDs), new Action<DVD>(this.detach_DVDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(40)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="Bit")]
		public System.Nullable<bool> TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiTre", DbType="Int")]
		public System.Nullable<int> PhiTre
		{
			get
			{
				return this._PhiTre;
			}
			set
			{
				if ((this._PhiTre != value))
				{
					this.OnPhiTreChanging(value);
					this.SendPropertyChanging();
					this._PhiTre = value;
					this.SendPropertyChanged("PhiTre");
					this.OnPhiTreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianThue", DbType="Int")]
		public System.Nullable<int> ThoiGianThue
		{
			get
			{
				return this._ThoiGianThue;
			}
			set
			{
				if ((this._ThoiGianThue != value))
				{
					this.OnThoiGianThueChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianThue = value;
					this.SendPropertyChanged("ThoiGianThue");
					this.OnThoiGianThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Title_ChiTietPhieuDatTruoc", Storage="_ChiTietPhieuDatTruocs", ThisKey="Id", OtherKey="IdTitle")]
		public EntitySet<ChiTietPhieuDatTruoc> ChiTietPhieuDatTruocs
		{
			get
			{
				return this._ChiTietPhieuDatTruocs;
			}
			set
			{
				this._ChiTietPhieuDatTruocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Title_DVD", Storage="_DVDs", ThisKey="Id", OtherKey="IdTitle")]
		public EntitySet<DVD> DVDs
		{
			get
			{
				return this._DVDs;
			}
			set
			{
				this._DVDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuDatTruocs(ChiTietPhieuDatTruoc entity)
		{
			this.SendPropertyChanging();
			entity.Title = this;
		}
		
		private void detach_ChiTietPhieuDatTruocs(ChiTietPhieuDatTruoc entity)
		{
			this.SendPropertyChanging();
			entity.Title = null;
		}
		
		private void attach_DVDs(DVD entity)
		{
			this.SendPropertyChanging();
			entity.Title = this;
		}
		
		private void detach_DVDs(DVD entity)
		{
			this.SendPropertyChanging();
			entity.Title = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuMuon")]
	public partial class ChiTietPhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPhieuMuon;
		
		private int _IdDVD;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private int _PhiTre;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntityRef<DVD> _DVD;
		
		private EntityRef<PhieuMuon> _PhieuMuon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPhieuMuonChanging(int value);
    partial void OnIdPhieuMuonChanged();
    partial void OnIdDVDChanging(int value);
    partial void OnIdDVDChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnPhiTreChanging(int value);
    partial void OnPhiTreChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public ChiTietPhieuMuon()
		{
			this._DVD = default(EntityRef<DVD>);
			this._PhieuMuon = default(EntityRef<PhieuMuon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPhieuMuon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPhieuMuon
		{
			get
			{
				return this._IdPhieuMuon;
			}
			set
			{
				if ((this._IdPhieuMuon != value))
				{
					if (this._PhieuMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._IdPhieuMuon = value;
					this.SendPropertyChanged("IdPhieuMuon");
					this.OnIdPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDVD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdDVD
		{
			get
			{
				return this._IdDVD;
			}
			set
			{
				if ((this._IdDVD != value))
				{
					if (this._DVD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDVDChanging(value);
					this.SendPropertyChanging();
					this._IdDVD = value;
					this.SendPropertyChanged("IdDVD");
					this.OnIdDVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiTre", DbType="Int NOT NULL")]
		public int PhiTre
		{
			get
			{
				return this._PhiTre;
			}
			set
			{
				if ((this._PhiTre != value))
				{
					this.OnPhiTreChanging(value);
					this.SendPropertyChanging();
					this._PhiTre = value;
					this.SendPropertyChanged("PhiTre");
					this.OnPhiTreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVD_ChiTietPhieuMuon", Storage="_DVD", ThisKey="IdDVD", OtherKey="Id", IsForeignKey=true)]
		public DVD DVD
		{
			get
			{
				return this._DVD.Entity;
			}
			set
			{
				DVD previousValue = this._DVD.Entity;
				if (((previousValue != value) 
							|| (this._DVD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DVD.Entity = null;
						previousValue.ChiTietPhieuMuons.Remove(this);
					}
					this._DVD.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuMuons.Add(this);
						this._IdDVD = value.Id;
					}
					else
					{
						this._IdDVD = default(int);
					}
					this.SendPropertyChanged("DVD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_ChiTietPhieuMuon", Storage="_PhieuMuon", ThisKey="IdPhieuMuon", OtherKey="Id", IsForeignKey=true)]
		public PhieuMuon PhieuMuon
		{
			get
			{
				return this._PhieuMuon.Entity;
			}
			set
			{
				PhieuMuon previousValue = this._PhieuMuon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuMuon.Entity = null;
						previousValue.ChiTietPhieuMuons.Remove(this);
					}
					this._PhieuMuon.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuMuons.Add(this);
						this._IdPhieuMuon = value.Id;
					}
					else
					{
						this._IdPhieuMuon = default(int);
					}
					this.SendPropertyChanged("PhieuMuon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DVD")]
	public partial class DVD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdTitle;
		
		private string _TinhTrang;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ChiTietPhieuMuon> _ChiTietPhieuMuons;
		
		private EntityRef<Title> _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdTitleChanging(int value);
    partial void OnIdTitleChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public DVD()
		{
			this._ChiTietPhieuMuons = new EntitySet<ChiTietPhieuMuon>(new Action<ChiTietPhieuMuon>(this.attach_ChiTietPhieuMuons), new Action<ChiTietPhieuMuon>(this.detach_ChiTietPhieuMuons));
			this._Title = default(EntityRef<Title>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTitle", DbType="Int NOT NULL")]
		public int IdTitle
		{
			get
			{
				return this._IdTitle;
			}
			set
			{
				if ((this._IdTitle != value))
				{
					if (this._Title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTitleChanging(value);
					this.SendPropertyChanging();
					this._IdTitle = value;
					this.SendPropertyChanged("IdTitle");
					this.OnIdTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DVD_ChiTietPhieuMuon", Storage="_ChiTietPhieuMuons", ThisKey="Id", OtherKey="IdDVD")]
		public EntitySet<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this._ChiTietPhieuMuons;
			}
			set
			{
				this._ChiTietPhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Title_DVD", Storage="_Title", ThisKey="IdTitle", OtherKey="Id", IsForeignKey=true)]
		public Title Title
		{
			get
			{
				return this._Title.Entity;
			}
			set
			{
				Title previousValue = this._Title.Entity;
				if (((previousValue != value) 
							|| (this._Title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Title.Entity = null;
						previousValue.DVDs.Remove(this);
					}
					this._Title.Entity = value;
					if ((value != null))
					{
						value.DVDs.Add(this);
						this._IdTitle = value.Id;
					}
					else
					{
						this._IdTitle = default(int);
					}
					this.SendPropertyChanged("Title");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.DVD = this;
		}
		
		private void detach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.DVD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ten;
		
		private string _DiaChi;
		
		private string _Sdt;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<PhieuDatTruoc> _PhieuDatTruocs;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSdtChanging(string value);
    partial void OnSdtChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public KhachHang()
		{
			this._PhieuDatTruocs = new EntitySet<PhieuDatTruoc>(new Action<PhieuDatTruoc>(this.attach_PhieuDatTruocs), new Action<PhieuDatTruoc>(this.detach_PhieuDatTruocs));
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(40)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(40)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sdt", DbType="NVarChar(40)")]
		public string Sdt
		{
			get
			{
				return this._Sdt;
			}
			set
			{
				if ((this._Sdt != value))
				{
					this.OnSdtChanging(value);
					this.SendPropertyChanging();
					this._Sdt = value;
					this.SendPropertyChanged("Sdt");
					this.OnSdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuDatTruoc", Storage="_PhieuDatTruocs", ThisKey="Id", OtherKey="IdKhachHang")]
		public EntitySet<PhieuDatTruoc> PhieuDatTruocs
		{
			get
			{
				return this._PhieuDatTruocs;
			}
			set
			{
				this._PhieuDatTruocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuMuon", Storage="_PhieuMuons", ThisKey="Id", OtherKey="IdKhachHang")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuDatTruocs(PhieuDatTruoc entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuDatTruocs(PhieuDatTruoc entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Password;
		
		private string _Ten;
		
		private string _DiaChi;
		
		private string _Sdt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSdtChanging(string value);
    partial void OnSdtChanged();
    #endregion
		
		public NhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(40)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(40)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(40)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sdt", DbType="NVarChar(40)")]
		public string Sdt
		{
			get
			{
				return this._Sdt;
			}
			set
			{
				if ((this._Sdt != value))
				{
					this.OnSdtChanging(value);
					this.SendPropertyChanging();
					this._Sdt = value;
					this.SendPropertyChanged("Sdt");
					this.OnSdtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuDatTruoc")]
	public partial class PhieuDatTruoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdKhachHang;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<ChiTietPhieuDatTruoc> _ChiTietPhieuDatTruocs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdKhachHangChanging(int value);
    partial void OnIdKhachHangChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public PhieuDatTruoc()
		{
			this._ChiTietPhieuDatTruocs = new EntitySet<ChiTietPhieuDatTruoc>(new Action<ChiTietPhieuDatTruoc>(this.attach_ChiTietPhieuDatTruocs), new Action<ChiTietPhieuDatTruoc>(this.detach_ChiTietPhieuDatTruocs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhachHang", DbType="Int NOT NULL")]
		public int IdKhachHang
		{
			get
			{
				return this._IdKhachHang;
			}
			set
			{
				if ((this._IdKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IdKhachHang = value;
					this.SendPropertyChanged("IdKhachHang");
					this.OnIdKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuDatTruoc_ChiTietPhieuDatTruoc", Storage="_ChiTietPhieuDatTruocs", ThisKey="Id", OtherKey="IdPhieuDatTruoc")]
		public EntitySet<ChiTietPhieuDatTruoc> ChiTietPhieuDatTruocs
		{
			get
			{
				return this._ChiTietPhieuDatTruocs;
			}
			set
			{
				this._ChiTietPhieuDatTruocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuDatTruoc", Storage="_KhachHang", ThisKey="IdKhachHang", OtherKey="Id", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuDatTruocs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuDatTruocs.Add(this);
						this._IdKhachHang = value.Id;
					}
					else
					{
						this._IdKhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuDatTruocs(ChiTietPhieuDatTruoc entity)
		{
			this.SendPropertyChanging();
			entity.PhieuDatTruoc = this;
		}
		
		private void detach_ChiTietPhieuDatTruocs(ChiTietPhieuDatTruoc entity)
		{
			this.SendPropertyChanging();
			entity.PhieuDatTruoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuMuon")]
	public partial class PhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdKhachHang;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<ChiTietPhieuMuon> _ChiTietPhieuMuons;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdKhachHangChanging(int value);
    partial void OnIdKhachHangChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public PhieuMuon()
		{
			this._ChiTietPhieuMuons = new EntitySet<ChiTietPhieuMuon>(new Action<ChiTietPhieuMuon>(this.attach_ChiTietPhieuMuons), new Action<ChiTietPhieuMuon>(this.detach_ChiTietPhieuMuons));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhachHang", DbType="Int NOT NULL")]
		public int IdKhachHang
		{
			get
			{
				return this._IdKhachHang;
			}
			set
			{
				if ((this._IdKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IdKhachHang = value;
					this.SendPropertyChanged("IdKhachHang");
					this.OnIdKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_ChiTietPhieuMuon", Storage="_ChiTietPhieuMuons", ThisKey="Id", OtherKey="IdPhieuMuon")]
		public EntitySet<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this._ChiTietPhieuMuons;
			}
			set
			{
				this._ChiTietPhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuMuon", Storage="_KhachHang", ThisKey="IdKhachHang", OtherKey="Id", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._IdKhachHang = value.Id;
					}
					else
					{
						this._IdKhachHang = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = this;
		}
		
		private void detach_ChiTietPhieuMuons(ChiTietPhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = null;
		}
	}
}
#pragma warning restore 1591
